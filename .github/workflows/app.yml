name: AutoSubSync

on:
  workflow_dispatch:

env:
  DIST_DIR: /tmp/builds

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            build: win-x64
            file_name: win_amd64
          - os: ubuntu-latest
            build: linux-x64
            file_name: linux_amd64
          - os: macos-latest
            build: osx-arm64
            file_name: macos_arm64

    runs-on: ${{ matrix.os }}

    outputs:
      version: ${{ steps.set-version.outputs.version }}
      ffmpeg_version: ${{ steps.set-version.outputs.ffmpeg_version }}
      ffsubsync_version: ${{ steps.set-version.outputs.ffsubsync_version }}
      alass_version: ${{ steps.set-version.outputs.alass_version }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv python3-tk

      - name: Install required modules globally
        run: |
          pip install requests

      - name: Run build script
        run: |
          python build.py

      - name: Parse versions.json (Windows)
        if: matrix.os == 'windows-latest'
        id: set-version
        run: |
          if (Test-Path main/resources/versions.json) {
            $json = Get-Content -Raw -Path main/resources/versions.json | ConvertFrom-Json
            echo "::set-output name=version::$($json.AutoSubSync)"
            echo "::set-output name=ffmpeg_version::$($json.ffmpeg)"
            echo "::set-output name=ffsubsync_version::$($json.ffsubsync)"
            echo "::set-output name=alass_version::$($json.alass)"
          } else {
            Write-Host "versions.json not found"
          }

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.file_name }}
          path: |
            *.zip
            *.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.DIST_DIR }}
          pattern: build-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.build.outputs.version }}"
          name: "AutoSubSync v${{ needs.build.outputs.version }}"
          body: |
            >${{ needs.build.outputs.ffmpeg_version }}
            >${{ needs.build.outputs.ffsubsync_version }}
            >${{ needs.build.outputs.alass_version }}
          files: ${{ env.DIST_DIR }}/*
          generate_release_notes: false
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
