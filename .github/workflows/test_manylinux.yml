name: AutoSubSync Test Manylinux

on:
  workflow_dispatch:

env:
  DIST_DIR: /tmp/builds

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            build: win-x64
            file_name: win_amd64
          - os: macos-latest
            build: osx-arm64
            file_name: macos_arm64
          - os: macos-13
            build: macos-amd64
            file_name: macos_amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.8
          cache: "pip"

      - name: Install required modules globally
        run: |
          pip install requests

      - name: Run build script
        run: |
          python build.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.file_name }}
          path: |
            dist/*.zip
            dist/*.tar.gz

  build-linux-manylinux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Build in manylinux container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            quay.io/pypa/manylinux_2_28_x86_64 \
            bash -c "
              # Install system dependencies
              yum install -y tk-devel tcl-devel gcc which && \
              
              # Find Python 3.12 in the container
              PYTHON_DIR=\$(find /opt/python -name 'cp312*' | sort | head -n 1) && \
              echo \"Using Python directory: \${PYTHON_DIR}\" && \
              
              # Set environment variables for Python and PyInstaller
              export PATH=\"\${PYTHON_DIR}/bin:\$PATH\" && \
              export LD_LIBRARY_PATH=\"\${PYTHON_DIR}/lib:\$LD_LIBRARY_PATH\" && \
              
              # Find where the Python library actually is
              PYTHON_LIB=\$(find /opt -name 'libpython3.12*.so*' | head -n 1) && \
              echo \"Found Python library: \${PYTHON_LIB}\" && \
              
              # If we found the library, create symbolic links
              if [ ! -z \"\${PYTHON_LIB}\" ]; then
                # Create directory if it doesn't exist
                mkdir -p \${PYTHON_DIR}/lib && \
                # Create the symbolic link with the full path
                ln -sf \${PYTHON_LIB} \${PYTHON_DIR}/lib/libpython3.12.so && \
                # Create additional symlinks in system directories
                mkdir -p /usr/lib64 && \
                ln -sf \${PYTHON_LIB} /usr/lib64/libpython3.12.so
              else
                # If we couldn't find it, try alternative approach for statically compiled Python
                echo \"Python library not found, trying alternative approach...\" && \
                # Make a dummy libpython so PyInstaller doesn't exit early
                touch \${PYTHON_DIR}/lib/libpython3.12.so && \
                # Create PyInstaller configuration to use staticlib
                mkdir -p ~/.pyinstaller && \
                echo 'import PyInstaller.compat' > ~/.pyinstaller/config.py && \
                echo 'PyInstaller.compat.is_linux = False  # Bypass Linux shared library check' >> ~/.pyinstaller/config.py
              fi && \
              
              # Debug info before build
              echo \"Python version:\" && python --version && \
              echo \"Python executable:\" && which python && \
              echo \"Looking for Python libraries:\" && \
              find /opt -name 'libpython3.12*.so*' | xargs ls -la 2>/dev/null || echo \"No libraries found\" && \
              
              # Install basic pip packages to ensure system has what it needs
              python -m pip install --upgrade pip setuptools wheel && \
              python -m pip install requests && \
              
              # Run the build script which creates its own venv
              python build.py
            "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-manylinux_amd64
          path: |
            dist/*.zip
            dist/*.tar.gz