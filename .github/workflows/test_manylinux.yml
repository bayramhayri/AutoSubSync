name: AutoSubSync Test Manylinux

on:
  workflow_dispatch:

env:
  DIST_DIR: /tmp/builds

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            build: win-x64
            file_name: win_amd64
          - os: macos-latest
            build: osx-arm64
            file_name: macos_arm64
          - os: macos-13
            build: macos-amd64
            file_name: macos_amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.8
          cache: "pip"

      - name: Install required modules globally
        run: |
          pip install requests

      - name: Run build script
        run: |
          python build.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.file_name }}
          path: |
            AutoSubSync-v*.zip
            AutoSubSync-v*.tar.gz

  build-linux-manylinux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Build in manylinux container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            quay.io/pypa/manylinux_2_28_x86_64 \
            bash -c "
              # Install system dependencies
              yum install -y tk-devel tcl-devel gcc which && \
              
              # Find Python 3.12 in the container
              PYTHON_DIR=\$(find /opt/python -name 'cp312*' | sort | head -n 1) && \
              echo \"Using Python directory: \${PYTHON_DIR}\" && \
              
              # Set environment variables for Python and PyInstaller
              export PATH=\"\${PYTHON_DIR}/bin:\$PATH\" && \
              export LD_LIBRARY_PATH=\"\${PYTHON_DIR}/lib:\$LD_LIBRARY_PATH\" && \
              
              # Install PyInstaller's dependencies first
              python -m pip install --upgrade pip && \
              python -m pip install setuptools wheel && \
              
              # Create PyInstaller runtime hooks to handle Python loading
              mkdir -p /workspace/hooks && \
              echo 'import os
              import sys
              
              # Add the current directory to PATH so Python can find libraries at runtime
              os.environ[\"PATH\"] = os.path.dirname(sys.executable) + os.pathsep + os.environ.get(\"PATH\", \"\")
              ' > /workspace/hooks/hook-app_runtime.py && \
              
              # Modify build spec if it exists to use the hook
              if [ -f build.spec ]; then
                sed -i '/^a = Analysis/s/$/\\n    hookspath=[\"hooks\"],/' build.spec
              fi && \
              
              # Run the build script
              python build.py
            "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-manylinux_amd64
          path: |
            AutoSubSync-v*.zip
            AutoSubSync-v*.tar.gz